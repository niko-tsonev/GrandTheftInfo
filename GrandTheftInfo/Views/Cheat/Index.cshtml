@model IOrderedEnumerable<IGrouping<int,CheatViewModel>>

@{
    ViewData["Title"] = "Cheats";
    var cheatsCount = Model.Count();
    var firstItem = Model.Any() ? Model.First().Key : 0;
}

<div class="container">
    @if (cheatsCount > 0)
    {
        @await Html.PartialAsync("_GameNavigationPartial", Model)
    }

    @foreach (var gameGroup in Model)
    {
        <div class="cheat-container" data-game-id="@gameGroup.Key">
            @foreach (var platformGroup in gameGroup.GroupBy(x => x.Platform))
            {
                <div class="cheat-card p-3" data-platform="@platformGroup.Key">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@platformGroup.Key</h5>
                            <ul class="list-group">
                            @foreach (var cheat in platformGroup)
                            {
                                <li class="list-group-item">
                                    <span>@cheat.Name - </span>
                                    <span>@cheat.CheatCode</span>
                                        @if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
                                        {
                                            <span class="card-buttons m-2">
                                                <a asp-controller="Cheat" asp-action="Edit" asp-route-id="@cheat.Id" class="btn btn-outline-warning">Edit</a>
                                                <form method="post" asp-controller="Cheat" asp-action="Delete" asp-route-id="@cheat.Id">
                                                    <input type="submit" value="Delete" class="btn btn-outline-danger">
                                                </form>
                                            </span>
                                        }
                                    </li>
                            }
                            </ul>
                        </div>
                    </div>
                </div>
            }
            </div>
    }
    @if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
    {
        <div class="card-button-new">
            <a id="addCheatButton" href="@Url.Action("Add", "Cheat")" class="btn btn-outline-success">Add New Cheat</a>
        </div>
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var radioButtons = document.querySelectorAll('.btn-check');
        var addCheatButton = document.getElementById('addCheatButton');

        if (@cheatsCount > 0) {
            // Show cheat cards for the first game
            var firstGameId = @firstItem;
            var firstCheatContainer = document.querySelector('.cheat-container[data-game-id="' + firstGameId + '"]');
            firstCheatContainer.style.display = 'block';

            if (addCheatButton) {
                // Set the initial gameId for the Add New Cheat button
                addCheatButton.href += '?gameId=' + firstGameId;
            }
        }

        radioButtons.forEach(function (radio) {
            radio.addEventListener('change', function () {
                var gameId = this.getAttribute('data-game-id');
                var cheats = document.querySelectorAll('.cheat-container');

                // Hide all game containers
                cheats.forEach(function (cheat) {
                    cheat.style.display = 'none';
                });

                // Show game container for the selected game
                var selectedCheatContainer = document.querySelector('.cheat-container[data-game-id="' + gameId + '"]');
                selectedCheatContainer.style.display = 'block';

                if (addCheatButton) {
                    // Update the gameId for the Add New Cheat button
                    addCheatButton.href = '@Url.Action("Add", "Cheat")' + '?gameId=' + gameId;
                }
            });
        });
    });
</script>

<style>
    .cheat-container {
        display: none;
    }

    .card-title {
        margin-bottom: 10px;
    }

    .card-buttons a, .card-buttons input {
        padding: 3px;
    }
</style>
