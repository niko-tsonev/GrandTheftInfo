@model IOrderedEnumerable<IGrouping<int, SongViewModel>>

@{
    ViewData["Title"] = "Songs";
    var songsCount = Model.Count();
    var firstItem = Model.Any() ? Model.First().Key : 0;
}

<div class="container">
    @if (songsCount > 0)
    {
        @await Html.PartialAsync("_GameNavigationPartial", Model)
    }

    @foreach (var gameGroup in Model)
    {
        <div class="song-container" data-game-id="@gameGroup.Key">
            @foreach (var radioGroup in gameGroup.GroupBy(x => x.Radio))
            {
                <div class="radio-card mb-4" data-radio="@radioGroup.Key">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title mb-3">
                                <img src="@radioGroup.First().RadioImageUrl" alt="Radio Image" style="max-width: 75px;"> @radioGroup.Key
                            </h5>
                            <div class="row p-4">
                                @foreach (var song in radioGroup)
                                {
                                    <div class="col-md-3 mb-5">
                                        <iframe class="iframe" src="@song.VideoUrl" frameborder="0" allowfullscreen></iframe>
                                        <div class="info p-3">
                                            <h4 class="mb-2">@song.Name</h4>
                                            <h6 class="text-muted">@song.GameName</h6>
                                            <h4 class="text-muted">@song.Radio</h4>
                                        </div>
                                        @if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
                                        {
                                            <div class="card-buttons">
                                                <a asp-controller="Song" asp-action="Edit" asp-route-id="@song.Id" class="btn btn-outline-warning">Edit</a>
                                                <form method="post" asp-controller="Song" asp-action="Delete" asp-route-id="@song.Id">
                                                    <input type="submit" value="Delete" class="btn btn-outline-danger">
                                                </form>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                            @if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
                            {
                                <div class="card-button-new">
                                    <a asp-controller="Song" asp-action="Add" asp-route-radioName="@radioGroup.Key" class="btn btn-outline-success">Add New Song</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    @if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
    {
        <div class="card-button-new">
            <a id="addSongButton" href="@Url.Action("AddSongWithRadio", "Song")" class="btn btn-outline-success">Add New Song with Radio</a>
        </div>
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var radioButtons = document.querySelectorAll('.btn-check');
        var addSongButton = document.getElementById('addSongButton');

        if (@songsCount > 0) {
            // Show song cards for the first game
            var firstGameId = @firstItem;
            var firstSongContainer = document.querySelector('.song-container[data-game-id="' + firstGameId + '"]');
            firstSongContainer.style.display = 'block';

            if (addSongButton) {
                addSongButton.href += '?gameId=' + firstGameId;
            }
        }

        radioButtons.forEach(function (radio) {
            radio.addEventListener('change', function () {
                var gameId = this.getAttribute('data-game-id');
                var songs = document.querySelectorAll('.song-container');

                // Hide all game containers
                songs.forEach(function (song) {
                    song.style.display = 'none';
                });

                // Show game container for the selected game
                var selectedSongContainer = document.querySelector('.song-container[data-game-id="' + gameId + '"]');
                selectedSongContainer.style.display = 'block';

                if (addSongButton) {
                    addSongButton.href = '@Url.Action("AddSongWithRadio", "Song")' + '?gameId=' + gameId;
                }
            });
        });
    });
</script>

<style>
    .song-container {
        display: none;
    }

    .card-title, .info, .card-buttons {
        text-align: center;
    }
</style>
