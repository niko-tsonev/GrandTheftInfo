@model IOrderedEnumerable<IGrouping<int,SaveGameViewModel>>

@{
    ViewData["Title"] = "Save Games";
    var savesCount = Model.Count();
    var firstItem = Model.Any() ? Model.First().Key : 0;
}

<div class="container">
    @if (savesCount > 0)
    {
        @await Html.PartialAsync("_GameNavigationPartial", Model)
    }

    <div class="row">
        @foreach (var saveGameGroup in Model)
        {
            @foreach (var save in saveGameGroup)
            {
                <div class="col-sm-3 save-container" data-game-id="@saveGameGroup.Key">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h5 class="card-title">@save.FileName</h5>
                            <p class="card-text">@save.Description</p>
                            <p class="card-text">@save.GameName</p>
                            <a href="@save.BlobUri" class="btn btn-primary" download>Download</a>
                            @if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
                            {
                                <div class="card-buttons">
                                    <a asp-controller="SaveGame" asp-action="Edit" asp-route-id="@save.Id" class="btn btn-outline-warning">Edit</a>
                                    <form method="post" asp-controller="SaveGame" asp-action="Delete" asp-route-id="@save.Id">
                                        <input type="submit" value="Delete" class="btn btn-outline-danger">
                                    </form>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        @if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
        {
        <div class="card-button-new">
            <a id="addSaveButton" href="@Url.Action("Add", "SaveGame")" class="btn btn-outline-success">Add New Save</a>
        </div>
        }
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var radioButtons = document.querySelectorAll('.btn-check');
        var addSaveButton = document.getElementById('addSaveButton');

        if(@savesCount > 0) {
            // Show all missions for the first game when the page is loaded
            var firstGameId = @firstItem;
            var firstSaveContainer = document.querySelectorAll('.save-container[data-game-id="' + firstGameId + '"]');
            firstSaveContainer.forEach(function (mission) {
                mission.style.display = 'block';
            });

            if (addSaveButton) {
                addSaveButton.href += '?gameId=' + firstGameId;
            }
        }

        radioButtons.forEach(function (radio) {
            radio.addEventListener('change', function () {
                var gameId = this.getAttribute('data-game-id');
                var saves = document.querySelectorAll('.save-container');

                // Hide all missions
                saves.forEach(function (save) {
                    save.style.display = 'none';
                });

                // Show missions for the selected game
                var selectedSaveContainer = document.querySelectorAll('.save-container[data-game-id="' + gameId + '"]');
                selectedSaveContainer.forEach(function (save) {
                    save.style.display = 'block';
                });
                
                if (addSaveButton) {
                    addSaveButton.href = '@Url.Action("Add", "SaveGame")' + '?gameId=' + gameId;
                }
            });
        });
    });
</script>

<style>
    .save-container {
        display: none;
    }

    .card-buttons {
        float: right;
    }
</style>